{"version":3,"sources":["logo.svg","AppGenBarcodeMiscReceipt/AppGenBarcodeMiscReceipt.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Barcode","require","tableIcons","makeStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PrintIcon","CropFreeIcon","MaterialTableDemo","state","columns","title","field","defaultSort","type","data","TagPrintId","console","log","this","axios","post","strIDOName","strPropertyList","strFilter","strOrderBy","strPostQueryMethod","iRecordCap","then","response","myArray","map","trans","TransNum","TransDate","Item","Lot","Qty","setState","componentRef","error","item","lot","qty1","qty2","uf_act_Weight","uf_pack","sts_no","qty_sts_no","trans_num","id","STSPO","spec","grade","Uf_spec","Uf_tagdesc","Uf_NPS","Uf_Schedule","Uf_length","icons","options","exportButton","paging","maxBodyHeight","actionsColumnIndex","loadingType","actions","icon","rowData","tooltip","onClick","event","Genbarcode","style","TagId","TYPE","el","textAlign","trigger","Button","variant","color","content","React","Component","ComponentToPrint","fontSize","colSpan","mystyle","margin","value","align","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ca4aed62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport axios from \"axios\";\r\nimport ReactToPrint from \"react-to-print\";\r\nvar Barcode = require(\"react-barcode\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  PrintIcon: forwardRef((props, ref) => <PrintIcon {...props} ref={ref} />),\r\n  CropFreeIcon: forwardRef((props, ref) => (\r\n    <CropFreeIcon {...props} ref={ref} />\r\n  )),\r\n};\r\n\r\nexport default class MaterialTableDemo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        { title: \"TransNum\", field: \"TransNum\", defaultSort: \"desc\" },\r\n        { title: \"TransDate\", field: \"TransDate\", type: \"datetime\" },\r\n        { title: \"item\", field: \"Item\" },\r\n        { title: \"qty\", field: \"Qty\", type: \"numeric\" },\r\n        { title: \"lot\", field: \"Lot\" },\r\n      ],\r\n      data: [],\r\n      TagPrintId: \"xxxxxxxxxxx\",\r\n    };\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    console.log(\"componentWillMount\");\r\n    console.log(this.state.data);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    axios\r\n      .post(\r\n        \"http://172.18.1.194:99/sts_web_api/api/Syteline/PostLoadDataSet\",\r\n        {\r\n          strIDOName: \"SLMatltrans\",\r\n          strPropertyList: \"TransNum,TransDate,Item,Lot,TransType,Qty\",\r\n          strFilter: \"Item like '%%' and TransType='H' \",\r\n          strOrderBy: \"TransNum\",\r\n          strPostQueryMethod: \"\",\r\n          iRecordCap: 500,\r\n        }\r\n      )\r\n      .then(\r\n        (response) => {\r\n          const myArray = response.data.map((trans) => {\r\n            return {\r\n              TransNum: trans.TransNum,\r\n              TransDate: trans.TransDate,\r\n              Item: trans.Item,\r\n              Lot: trans.Lot,\r\n              Qty: trans.Qty,\r\n            };\r\n          });\r\n          this.setState({ data: myArray });\r\n          console.log(this.componentRef);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  Genbarcode(TransNum, item, lot, Qty) {\r\n    axios\r\n      .post(\"http://172.18.1.194:99/sts_web_api/api/Syteline/MvBcTag\", {\r\n        item: item,\r\n        lot: lot,\r\n        qty1: Qty,\r\n        qty2: 0,\r\n        uf_act_Weight: 0,\r\n        uf_pack: 0,\r\n        sts_no: 0,\r\n        qty_sts_no: 0,\r\n        trans_num: TransNum,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          this.setState({\r\n            TagPrintId: response.data.id,\r\n            STSPO: response.data.id,\r\n            lot: response.data.lot,\r\n            qty1: response.data.qty1,\r\n            qty2: response.data.qty2,\r\n            spec: response.data.spec,\r\n            grade: response.data.Uf_spec,\r\n            Uf_tagdesc: response.data.Uf_tagdesc,\r\n            Uf_NPS: response.data.Uf_NPS,\r\n            Uf_Schedule: response.data.Uf_Schedule,\r\n            Uf_length: response.data.Uf_length,\r\n          });\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title=\"Mat trans Misc Receipt\"\r\n                  columns={this.state.columns}\r\n                  data={this.state.data}\r\n                  options={{\r\n                    exportButton: true,\r\n                    paging: false,\r\n                    maxBodyHeight: 520,\r\n                    actionsColumnIndex: -1,\r\n                    loadingType: \"linear\",\r\n                  }}\r\n                  actions={[\r\n                    {\r\n                      icon: (rowData) => <CropFreeIcon />,\r\n                      tooltip: \"Gen Barcode\",\r\n                      onClick: (event, rowData) =>\r\n                        this.Genbarcode(\r\n                          rowData.TransNum,\r\n                          rowData.Item,\r\n                          rowData.Lot,\r\n                          rowData.Qty\r\n                        ),\r\n                    },\r\n                  ]}\r\n                />\r\n              </td>\r\n              <td style={{ width: 80 }}>\r\n                {/* <div style={{ display: \"none\" }}></div> */}\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <ComponentToPrint\r\n                          TagId={this.state.TagPrintId}\r\n                          STSPO={this.state.STSPO}\r\n                          TYPE={this.state.TYPE}\r\n                          lot={this.state.lot}\r\n                          qty1={this.state.qty1}\r\n                          qty2={this.state.qty2}\r\n                          spec={this.state.spec}\r\n                          grade={this.state.grade}\r\n                          Uf_tagdesc={this.state.Uf_tagdesc}\r\n                          Uf_NPS={this.state.Uf_NPS}\r\n                          Uf_Schedule={this.state.Uf_Schedule}\r\n                          Uf_length={this.state.Uf_length}\r\n                          ref={(el) => (this.componentRef = el)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{ textAlign: \"center\" }}>\r\n                        <ReactToPrint\r\n                          trigger={() => (\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              <PrintIcon />\r\n                              Print tag barcode\r\n                            </Button>\r\n                          )}\r\n                          content={() => this.componentRef}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TagPrintId: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    const mystyle = {\r\n      padding: \"0\",\r\n      fontSize: 14,\r\n      margin: 0,\r\n    };\r\n\r\n    const font = {};\r\n\r\n    return (\r\n      <div>\r\n        <table style={{ fontSize: 14, padding: 25 }}>\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan=\"3\">\r\n                <h2 style={{ mystyle }}>\r\n                  <Barcode value={this.props.TagId} />\r\n                </h2>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td width=\"10%\">STS PO</td>\r\n              <td width=\"1%\">:</td>\r\n              <td width=\"20%\">{this.props.STSPO}</td>\r\n              <td width=\"50%\" align=\"left\"></td>\r\n            </tr>\r\n            <tr>\r\n              <td>TYPE</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">{this.props.TYPE}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>SPEC</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">\r\n                {this.props.spec} &nbsp;{this.props.grade}\r\n                {this.props.Uf_tagdesc}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>NPS</td>\r\n              <td>:</td>\r\n              <td>\r\n                <span>\r\n                  {this.props.Uf_NPS} x {this.props.Uf_Schedule} x{\" \"}\r\n                  {this.props.Uf_length}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>PCS</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">{this.props.qty1} &nbsp; PCS. / BUNDLE</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>WEIGHT</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">{this.props.qty2} &nbsp; KGS. / BUNDLE</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>BUNDLE</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>H/N</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>CUST</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>CUST PO</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">-</td>\r\n            </tr>\r\n            <tr>\r\n              <td>PORT</td>\r\n              <td>:</td>\r\n              <td colSpan=\"2\">-</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"3\">{this.props.lot}&nbsp;&nbsp;MADE IN THAILAND</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppGenBarcodeMiscReceipt from './AppGenBarcodeMiscReceipt/AppGenBarcodeMiscReceipt';\n\nfunction App() {\n  return (\n    <div>\n      <AppGenBarcodeMiscReceipt />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}