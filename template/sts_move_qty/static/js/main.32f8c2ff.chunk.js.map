{"version":3,"sources":["view/QuantityMove/CAutocomplete.js","view/QuantityMove/api.js","view/QuantityMove/tableIcons.js","view/QuantityMove/CGroupTextBoxs.js","view/QuantityMove/CMatTable.js","view/QuantityMove/CPrintDocument.js","view/QuantityMove/LinearProgressWithLabel.js","view/QuantityMove/ModalProgressSaving.js","view/QuantityMove/CCreate.js","view/QuantityMove/DocumentHearderList.js","App.js","serviceWorker.js","index.js"],"names":["CAutocomplete","props","Autocomplete","id","options","selectValue","getOptionLabel","option","title","style","width","margin","onChange","event","values","handleSelectValue","renderInput","params","TextField","label","variant","size","axios","create","baseURL","window","location","host","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PrintIcon","FormatListNumberedIcon","CropFreeIcon","useStyles","makeStyles","root","textField","padding","CheckLocationModal","CGroupTextBoxs","classes","useState","setLocation","openModal","setOpenModal","useEffect","API","get","then","res","loc","data","map","item","body","Paper","overflowX","icons","tableIcons","columns","field","type","ItemLoc","search","paging","maxBodyHeight","minBodyHeight","className","Modal","open","onClose","aria-labelledby","aria-describedby","Grid","container","alignItems","direction","justify","spacing","PageState","md","handleToLocation","onKeyUp","key","handleScanTag","target","value","document","getElementById","STS_qty_move_hdr_loc","Button","color","startIcon","fontSize","disabled","onClick","DocNum","STS_qty_move_hdr_date","MatTable","theme","createMuiTheme","overrides","MuiTableCell","ThemeProvider","qtyMoveList","length","ComponentToPrint","sumTotal","this","reduce","sum","number","qty1","Container","maxWidth","paddingTop","xs","textAlign","Box","border","paddingLeft","toLocation","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","filter","row","index","lot","fromloc","colSpan","React","Component","CPrintDocument","componentRef","useRef","handlePrint","useReactToPrint","content","current","height","overflowY","LinearProgressWithLabel","display","mr","LinearProgress","minWidth","Typography","Math","round","LinearWithValueLabel","progress","setProgress","i","timer","setInterval","prevProgress","listLength","clearInterval","alert","handleProcessSuccess","ModalProgressSaving","paper","position","backgroundColor","palette","background","boxShadow","shadows","docNum","CCreate","setToLocation","setQtyMoveList","setdocNum","ProcessSuccess","setProcessSuccess","setPageState","scanTag","items","u_m","CMatTable","STS_qty_move_line","moveqty_hdr","doc_num","console","log","DenseTable","onRowClick","rowData","handleDocNum","handleSTS_qty_move_hdr_loc","handleSTS_qty_move_hdr_date","create_date","date","handleSTS_qty_move_line","handlecheckItemLotLoc","STS_qty_move_hrd","filtering","App","setDocNum","setSTS_qty_move_hdr_loc","setSTS_qty_move_hdr_date","setSTS_qty_move_line","setSTS_qty_move_hrd","setItemLoc","hidden","Switch","checked","prev","pageState","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32f8c2ff.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function CAutocomplete(props) {\r\n    const onSelectChange = (event, values)=>{\r\n        props.handleSelectValue(values.title)\r\n    }\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.selectValue}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: \"100%\",margin: 10  }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) =>\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    variant=\"outlined\"\r\n                />}\r\n            size=\"small\"\r\n        />\r\n    );\r\n}\r\n","import axios from 'axios';\r\nexport default \r\naxios.create({\r\n  //    http://localhost:88/sts_web_center_new/\r\n  //    http://172.18.1.194/sts_web_center/\r\n  //    http://61.90.156.165/sts_web_center/\r\n  //    http://${window.location.host}/sts_web_center/\r\n  baseURL: `http://${window.location.host}/sts_web_center/`\r\n});","import React from 'react'\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport { forwardRef } from \"react\";\r\n\r\n\r\n\r\nexport default {\r\n    \r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        PrintIcon: forwardRef((props, ref) => <PrintIcon {...props} ref={ref} />),\r\n        FormatListNumberedIcon: forwardRef((props, ref) => <FormatListNumberedIcon {...props} ref={ref} />),\r\n        CropFreeIcon: forwardRef((props, ref) => (\r\n            <CropFreeIcon {...props} ref={ref} />\r\n        )),\r\n    \r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, TextField, IconButton, InputBase, Divider, TableRow, TableCell } from '@material-ui/core';\r\nimport CAutocomplete from './CAutocomplete';\r\nimport API from './api';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from './tableIcons'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // height: '92vh',\r\n        width: '100%',\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        margin: 5,\r\n        width: \"100%\",\r\n        padding: 0\r\n    },\r\n    CheckLocationModal: {\r\n        width: '50%',\r\n        margin: 50\r\n    }\r\n});\r\n\r\n\r\nfunction CGroupTextBoxs(props) {\r\n    const classes = useStyles();\r\n    const [location, setLocation] = useState([])\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const handleClose = () => { setOpenModal(false); };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        API.get(`module/API_QuantityMove/data.php?load=location_mst`)\r\n            .then(res => {\r\n                let loc = res.data.map(item => {\r\n                    return { title: item.loc }\r\n                });\r\n                setLocation(loc)\r\n            })\r\n    }, [])\r\n\r\n    const handleScanTag = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.handleScanTag(event.target.value)\r\n            document.getElementById('tagScan').value = \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const body = (\r\n        <div style={{ width: '85%', margin: '5%' }} >\r\n            <Paper >\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    title={\"location\"}\r\n                    columns={[\r\n                        { title: 'item', field: 'item', width: '400' },\r\n                        { title: 'description', field: 'description', width: '400' },\r\n                        { title: 'จำนวนมัด(Lot)', field: 'countlot', type: 'numeric' },\r\n                        { title: 'เส้น/มัด', field: 'Uf_pack', type: 'numeric' },\r\n                        { title: 'รวม', field: 'sumqty', type: 'numeric' },\r\n                    ]}\r\n                    data={props.ItemLoc}\r\n                    options={{\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '68vh',\r\n                        minBodyHeight: '68vh',\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div >\r\n    );\r\n\r\n    const CheckLocationModal = () => {\r\n        setOpenModal(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <div>\r\n                <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n                    {body}\r\n                </Modal>\r\n            </div>\r\n            <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                {(props.PageState) ?\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                        <Grid item md={4} container >\r\n                            <CAutocomplete label={\"Location ปลายทาง\"} selectValue={location} handleSelectValue={props.handleToLocation} />\r\n                        </Grid>\r\n                        <Grid item md={8} container >\r\n                            <TextField size=\"small\" label={\"Scan tag\"} id={\"tagScan\"} variant=\"outlined\" className={classes.textField} onKeyUp={handleScanTag} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                        <Grid item md={3} container >\r\n                            <TextField size=\"small\" label={\"Location ปลายทาง\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_loc} />\r\n                        </Grid>\r\n                        <Grid item md={2} container >\r\n                            <Button variant=\"contained\" color=\"primary\" startIcon={<FindInPageIcon />}\r\n                                style={{ margin: 10,fontSize:7.8 }} disabled={(props.STS_qty_move_hdr_loc) ? false : true}\r\n                                onClick={CheckLocationModal} > item Location\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={3} container >\r\n                            <TextField size=\"small\" label={\"Document ID\"} variant=\"outlined\" className={classes.textField} value={props.DocNum} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Date\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_date} />\r\n                        </Grid>\r\n                    </>\r\n                    // CheckLocationModal\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default CGroupTextBoxs","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: 10,\r\n        width: '99%',\r\n        margin: 10\r\n    },\r\n});\r\n\r\nfunction MatTable(props) {\r\n    const classes = useStyles();\r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            MuiTableCell: {\r\n                root: {\r\n                    padding: '5px 5px',\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <ThemeProvider theme={theme}>\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    //title={\"Quantity Move List :\" + (props.qtyMoveList)? 0:props.qtyMoveList.length}\r\n                    title={\"Quantity Move List :\" + props.qtyMoveList.length + \"รายการ\"}\r\n                    columns={[\r\n                        { title: 'id', field: 'id' },\r\n                        { title: 'lot', field: 'lot',width: 200 },\r\n                        { title: 'From loc', field: 'loc',width: 100 },\r\n                        { title: 'item', field: 'item', width: 300 },\r\n                        { title: 'เส้น/มัด', field: 'qty1', type: 'numeric' },\r\n                        { title: 'unit', field: 'u_m' },\r\n                    ]}\r\n                    data={props.qtyMoveList}\r\n                    options={{\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '45vh',\r\n                        minBodyHeight: '45vh',\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default MatTable;\r\n","import React, {  useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Container, Button, Box, Table } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n        const sumTotal = this.props.qtyMoveList.reduce((sum, number) => { return sum + number.qty1 }, 0)\r\n        return (\r\n            <Container >\r\n\r\n                <Container maxWidth=\"lg\" style={{ paddingTop: 50, width: \"99%\" }}  >\r\n                    <Grid container >\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Box border={1}>\r\n                                <p>\r\n                                    รายงานการย้าย Item Location\r\n                                </p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} paddingLeft={2}>\r\n                                <p>Document :  {this.props.DocNum}</p>\r\n                                <p>Location Destination :  {this.props.toLocation}</p>\r\n                                <p>เวลา : {this.props.STS_qty_move_hdr_date}</p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"simple table\" size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"right\">#</TableCell>\r\n                                                <TableCell align=\"center\">lot</TableCell>\r\n                                                <TableCell align=\"center\">From&nbsp;Location</TableCell>\r\n                                                <TableCell align=\"center\">item</TableCell>\r\n                                                <TableCell align=\"center\">เส้น/มัด</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.props.qtyMoveList\r\n\r\n                                                .filter((row) => {\r\n                                                    return row.qty1 > 1\r\n                                                })\r\n                                                .map((row, index) => (\r\n                                                    <TableRow key={row.id}>\r\n                                                        <TableCell align=\"right\">{index + 1}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.lot}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.fromloc}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.item}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.qty1}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))\r\n\r\n                                            }\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={3}></TableCell>\r\n                                                <TableCell >total</TableCell>\r\n                                                <TableCell align=\"right\">{sumTotal}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport function CPrintDocument(props) {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handlePrint} >Print  </Button>\r\n            {/* <ComponentToPrint ref={componentRef} /> */}\r\n            <div style={{ textAlign: \"center\", height: 0, overflowY: \"scroll\", }}>\r\n                <ComponentToPrint\r\n                    ref={componentRef}\r\n                    DocNum={props.DocNum}\r\n                    toLocation={props.toLocation}\r\n                    qtyMoveList={props.qtyMoveList}\r\n                    STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let i = 1;\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 100 / props.listLength));\r\n            if (i === props.listLength + 1) {\r\n                clearInterval(timer);\r\n                alert(\"ย้ายข้อมูลสำเร็จ\")\r\n                props.handleProcessSuccess(false)\r\n            }\r\n            i = i + 1;\r\n        }, 1200);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel value={progress} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\n\r\n\r\nexport default function ModalProgressSaving(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: \"80%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            margin: \"5%\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  เลขเอกสาร:{props.docNum}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  Location ปลายทาง:{props.toLocation}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  ทำการย้าย Location {props.qtyMoveList.length} รายการ</Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        <LinearProgressWithLabel\r\n                            listLength={props.qtyMoveList.length}\r\n                            handleProcessSuccess={props.handleProcessSuccess}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        {/* <CPrintDocument /> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container >\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CGroupTextBoxs from './CGroupTextBoxs';\r\nimport CMatTable from './CMatTable';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { CPrintDocument } from './CPrintDocument';\r\nimport API from './api';\r\nimport ModalProgressSaving from './ModalProgressSaving';\r\n\r\nfunction CCreate(props) {\r\n  const [toLocation, setToLocation] = useState()\r\n  const [qtyMoveList, setQtyMoveList] = useState([]);\r\n  const [docNum, setdocNum] = useState(\"\")\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [ProcessSuccess, setProcessSuccess] = useState(false)\r\n  const handleToLocation = (location) => { setToLocation(location) }\r\n  const handleClose = () => { setOpenModal(false); };\r\n  const handleProcessSuccess = (ProcessSuccess) => {\r\n    setOpenModal(false);\r\n    setProcessSuccess(ProcessSuccess);\r\n    props.setPageState(ProcessSuccess)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setOpenModal(false)\r\n  }, [ProcessSuccess])\r\n  const handleScanTag = (scanTag) => {\r\n    API.get(`module/API_QuantityMove/data.php?load=SearchTagDetail&tag_id=${scanTag}`)\r\n      .then(res => {\r\n        const items = res.data\r\n        if (res.data.length > 0) {\r\n          setQtyMoveList(qtyMoveList => [...qtyMoveList, { id: items[0].id, lot: items[0].lot, loc: items[0].loc, item: items[0].item, qty1: items[0].qty1, u_m: items[0].u_m, }])\r\n        } else {\r\n          alert(\"ไม่พบ Tags\")\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (!toLocation || qtyMoveList.length == 0) {\r\n      alert(\"กรุณากรอก location ปลายทาง หรือ scan barcode อย่างน้อย 1 lot\")\r\n      setOpenModal(false);\r\n    } else {\r\n      setOpenModal(true);\r\n      //Insert QTY MOVE HEARDER\r\n      API.get(`module/API_QuantityMove/data.php?load=moveqty_create_hdr&toLoc=${toLocation}`)\r\n        .then(res => {\r\n          const moveqty_hdr = res.data\r\n          setdocNum(moveqty_hdr.doc_num)\r\n          setToLocation(moveqty_hdr.loc)\r\n          if (qtyMoveList.length > 0) {\r\n            let i = 1;\r\n            //Insert QTY LINE \r\n            const timer = setInterval(() => {\r\n              API.get(`module/API_QuantityMove/data.php?load=moveqty_create_line&docnum=${moveqty_hdr.doc_num}&docline=${i}&tagnum=${qtyMoveList[i - 1].id}&toLoc=${toLocation}`)\r\n                .then(res => {\r\n                  console.log(\"Call API moveqty_create_line\")\r\n                })\r\n              if (i === qtyMoveList.length) {\r\n                clearInterval(timer)\r\n                setQtyMoveList([])\r\n                //setOpen(false);\r\n              }\r\n              i = i + 1;\r\n            }, 1000);\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <div >\r\n      <ModalProgressSaving\r\n        docNum={docNum}\r\n        toLocation={toLocation}\r\n        qtyMoveList={qtyMoveList}\r\n        handleProcessSuccess={handleProcessSuccess}\r\n      />\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n      <div>\r\n        <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n          {body}\r\n        </Modal>\r\n      </div>\r\n      <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n        <CGroupTextBoxs\r\n          handleScanTag={handleScanTag}\r\n          handleToLocation={handleToLocation}\r\n          DocNum={props.DocNum}\r\n          STS_qty_move_hdr_loc={props.STS_qty_move_hdr_loc}\r\n          STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n          PageState={props.PageState}\r\n          qtyMoveList={qtyMoveList}\r\n          ItemLoc={props.ItemLoc}\r\n        />\r\n\r\n        <CMatTable qtyMoveList={(props.PageState) ? qtyMoveList : props.STS_qty_move_line} />\r\n        <div style={{ width: \"100%\", padding: 15 }}>\r\n          {(props.PageState) ?\r\n            <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handleSubmit} >Save  </Button> :\r\n            <CPrintDocument\r\n              DocNum={props.DocNum}\r\n              toLocation = {props.STS_qty_move_hdr_loc}\r\n              qtyMoveList={props.STS_qty_move_line}\r\n              STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n            />\r\n          }\r\n          {/* <Button variant=\"contained\" color=\"default\" startIcon={<DeleteIcon />} style={{ margin: 10 }} > Clear </Button> */}\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CCreate;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport API from './api';\r\n\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default function DenseTable(props) {\r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            MuiTableCell: {\r\n                root: {\r\n                    padding: '10px 15px',\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    const handleClickSelectDoc = (row) => {\r\n        props.handleDocNum(row.doc_num)\r\n        props.handleSTS_qty_move_hdr_loc(row.loc)\r\n        props.handleSTS_qty_move_hdr_date(row.create_date.date)\r\n        API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_line&doc_num=${row.doc_num}`)\r\n            .then(res => {\r\n                props.handleSTS_qty_move_line(res.data)\r\n            })\r\n\r\n        API.get(`module/API_QuantityMove/data.php?load=checkItemLotLoc&loc=${row.loc}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                props.handlecheckItemLotLoc(res.data)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Paper>\r\n            <ThemeProvider theme={theme}>\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    title={\"Document List\"}\r\n                    columns={[\r\n                        { title: 'Doc num', field: 'doc_num' },\r\n                        { title: 'date', field: 'create_date.date', type: 'date' },\r\n                        { title: 'To location', field: 'loc' },\r\n                    ]}\r\n                    onRowClick={(event, rowData) => { \r\n                        console.log(event)\r\n                        handleClickSelectDoc(rowData) \r\n                    }}\r\n                    data={props.STS_qty_move_hrd}\r\n                    options={{\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '68vh',\r\n                        minBodyHeight: '68vh',\r\n                        filtering: true\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Switch } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport CCreate from './view/QuantityMove/CCreate';\nimport DocumentHearderList from './view/QuantityMove/DocumentHearderList';\nimport API from './view/QuantityMove/api';\n\n\nfunction App() {\n  const [PageState, setPageState] = useState(false)\n  const toggleChecked = () => setPageState((prev) => !prev) //State Page Create or View Document\n  const [IPState, setIPState] = useState(true)\n  const toggleIP = () => setIPState((prev) => !prev) //State Page Create or View Document\n  const [DocNum, setDocNum] = useState(\"\")\n  const [STS_qty_move_hdr_loc, setSTS_qty_move_hdr_loc] = useState(\"\")\n  const [STS_qty_move_hdr_date, setSTS_qty_move_hdr_date] = useState(\"\")\n  const [STS_qty_move_line, setSTS_qty_move_line] = useState([])\n  const [STS_qty_move_hrd, setSTS_qty_move_hrd] = useState([])\n  const [ItemLoc, setItemLoc] = useState([])\n\n  const handleDocNum = (DocNum) => setDocNum(DocNum) // Set Document Number\n  const handleSTS_qty_move_hdr_loc = (loc) => setSTS_qty_move_hdr_loc(loc) //Set Location\n  const handleSTS_qty_move_hdr_date = (date) => { setSTS_qty_move_hdr_date(date) } //Set Location\n  const handleSTS_qty_move_line = (STS_qty_move_line) => setSTS_qty_move_line(STS_qty_move_line) //\n\n  const handlecheckItemLotLoc = (ItemLoc) => setItemLoc(ItemLoc) \n\n  const handleSetPageState = (pageState) => {\n    setPageState(pageState)\n  }\n  useEffect(() => {\n    API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_hrd`)\n      .then(res => {\n        setSTS_qty_move_hrd(res.data)\n      })\n  }, [PageState])\n  return (\n    <Container maxWidth=\"lg\" style={{ padding: 5 }}>\n      <Grid container spacing={3}>\n        <Grid item xs={(PageState) ? 2 : 5} hidden={(PageState) ? true : false} style={{ textAlign: \"center\" }}>\n          <DocumentHearderList\n            STS_qty_move_hrd={STS_qty_move_hrd}\n            handleDocNum={handleDocNum}\n            handleSTS_qty_move_hdr_loc={handleSTS_qty_move_hdr_loc}\n            handleSTS_qty_move_hdr_date={handleSTS_qty_move_hdr_date}\n            handleSTS_qty_move_line={handleSTS_qty_move_line}\n            handlecheckItemLotLoc = {handlecheckItemLotLoc}\n          />\n        </Grid>\n        <Grid item xs={(PageState) ? 12 : 7}>\n          {<Switch checked={PageState} onChange={toggleChecked} />}\n          {(PageState) ? \"Create\" : \"View\"}\n          <CCreate\n            PageState={PageState}\n            DocNum={DocNum}\n            STS_qty_move_hdr_loc={STS_qty_move_hdr_loc}\n            STS_qty_move_hdr_date={STS_qty_move_hdr_date}\n            STS_qty_move_line={STS_qty_move_line}\n            setPageState={handleSetPageState}\n            ItemLoc = {ItemLoc}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst islocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (islocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}