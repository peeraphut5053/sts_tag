{"version":3,"sources":["view/QuantityMove/CAutocomplete.js","view/QuantityMove/api.js","view/QuantityMove/tableIcons.js","view/QuantityMove/CPrintDiaryReport.js","view/QuantityMove/CGroupTextBoxs.js","view/QuantityMove/CMatTable.js","view/QuantityMove/CPrintDocument.js","view/QuantityMove/LinearProgressWithLabel.js","view/QuantityMove/ModalProgressSaving.js","view/QuantityMove/CCreate.js","view/QuantityMove/DocumentHearderList.js","App.js","serviceWorker.js","index.js"],"names":["CAutocomplete","props","Autocomplete","id","options","selectValue","getOptionLabel","option","title","style","width","margin","onChange","event","values","console","log","length","handleSelectValue","renderInput","params","TextField","label","variant","size","axios","create","baseURL","window","location","host","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PrintIcon","FormatListNumberedIcon","CropFreeIcon","ComponentToPrint","Container","Grid","container","item","xs","textAlign","this","DairyReportLine","border","map","items","key","lot","doc_num","React","Component","CPrintDiaryReport","componentRef","useRef","handlePrint","useReactToPrint","content","current","Button","color","startIcon","onClick","height","overflowY","DairyReportCountLotByWCDate","useStyles","makeStyles","root","textField","padding","CheckLocationModal","CGroupTextBoxs","classes","useState","setLocation","w_c","setw_c","DairyReportCountLotByWC","SetDairyReportCountLotByWC","SetDairyReportCountLotByWCDate","SetDairyReportLine","openModal","setOpenModal","OpenDairyReportModal","setOpenDairyReportModal","useEffect","API","get","then","res","loc","data","wc","body","Paper","overflowX","icons","tableIcons","ItemLoc","columns","field","type","search","paging","maxBodyHeight","minBodyHeight","bodyDairyReport","alignItems","direction","justify","spacing","onRowClick","rowData","date","totalPerday","justifyContent","className","Modal","open","onClose","aria-labelledby","aria-describedby","PageState","md","handlew_c","handleToLocation","onKeyUp","handleScanTag","target","value","document","getElementById","STS_qty_move_hdr_loc","fontSize","disabled","DocNum","STS_qty_move_hdr_date","totalLot","MatTable","theme","createMuiTheme","overrides","MuiTableCell","ThemeProvider","qtyMoveList","sumTotal","reduce","sum","number","qty1","maxWidth","paddingTop","Box","paddingLeft","toLocation","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","filter","row","index","fromloc","colSpan","CPrintDocument","LinearProgressWithLabel","display","mr","LinearProgress","minWidth","Typography","Math","round","LinearWithValueLabel","progress","setProgress","i","timer","setInterval","prevProgress","listLength","clearInterval","alert","handleProcessSuccess","ModalProgressSaving","paper","position","backgroundColor","palette","background","boxShadow","shadows","docNum","CCreate","setToLocation","setQtyMoveList","setdocNum","ProcessSuccess","setProcessSuccess","setPageState","scanTag","u_m","work_center","CMatTable","STS_qty_move_line","moveqty_hdr","DenseTable","handleDocNum","handleSTS_qty_move_hdr_loc","handleSTS_qty_move_hdr_date","create_date","handleSTS_qty_move_line","handlecheckItemLotLoc","STS_qty_move_hrd","actionsColumnIndex","filtering","App","setDocNum","setSTS_qty_move_hdr_loc","setSTS_qty_move_hdr_date","setSTS_qty_move_line","setSTS_qty_move_hrd","setItemLoc","MainContainer","hidden","Switch","checked","prev","pageState","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ad57b08.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function CAutocomplete(props) {\r\n    const onSelectChange = (event, values) => {\r\n        //(values.title==\"\")? \" \":values.title\r\n        console.log(values)\r\n        if (values.title.length > 0) {\r\n            props.handleSelectValue(values.title)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.selectValue}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: \"100%\", margin: 10 }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) =>\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    variant=\"outlined\"\r\n                />}\r\n            size=\"small\"\r\n        />\r\n    );\r\n}\r\n","import axios from 'axios';\r\nexport default \r\naxios.create({\r\n  //    http://localhost:88/sts_web_center_new/\r\n  //    http://172.18.1.194/sts_web_center/\r\n  //    http://61.90.156.165/sts_web_center/\r\n  //    http://${window.location.host}/sts_web_center/\r\n  baseURL: `http://${window.location.host}/sts_web_center/`\r\n});","import React from 'react'\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport { forwardRef } from \"react\";\r\n\r\n\r\n\r\nexport default {\r\n    \r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        PrintIcon: forwardRef((props, ref) => <PrintIcon {...props} ref={ref} />),\r\n        FormatListNumberedIcon: forwardRef((props, ref) => <FormatListNumberedIcon {...props} ref={ref} />),\r\n        CropFreeIcon: forwardRef((props, ref) => (\r\n            <CropFreeIcon {...props} ref={ref} />\r\n        )),\r\n    \r\n}\r\n\r\n","import React, { useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Container, Button, Box, Table } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n        // const sumTotal = this.props.qtyMoveList.reduce((sum, number) => { return sum + number.qty1 }, 0)\r\n        return (\r\n            <Container >\r\n                <Grid container >\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        จำนวนทั้งหมด {this.props.DairyReportLine.length} รายการ\r\n                        <table border={1} width={\"100%\"}>\r\n                            <tr>\r\n                                <td>doc_num</td>\r\n                                <td > lot</td>\r\n                            </tr>\r\n                            {this.props.DairyReportLine.map((items) =>\r\n                                <tr key={items.lot}>\r\n                                    <td>{items.doc_num}</td>\r\n                                    <td>{items.lot}</td>\r\n                                </tr>\r\n                            )}\r\n\r\n                        </table>\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* \r\n                <Container maxWidth=\"lg\" style={{ paddingTop: 50, width: \"99%\" }}  >\r\n                    <Grid container >\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Box border={1}>\r\n                                <p>\r\n                                    รายงานการย้าย Item Location\r\n                                </p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} paddingLeft={2}>\r\n                                <p>Document :  {this.props.DocNum}</p>\r\n                                <p>Location Destination :  {this.props.toLocation}</p>\r\n                                <p>เวลา : {this.props.STS_qty_move_hdr_date}</p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"simple table\" size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"right\">#</TableCell>\r\n                                                <TableCell align=\"center\">lot</TableCell>\r\n                                                <TableCell align=\"center\">From&nbsp;Location</TableCell>\r\n                                                <TableCell align=\"center\">item</TableCell>\r\n                                                <TableCell align=\"center\">เส้น/มัด</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.props.qtyMoveList\r\n\r\n                                                .filter((row) => {\r\n                                                    return row.qty1 > 1\r\n                                                })\r\n                                                .map((row, index) => (\r\n                                                    <TableRow key={row.id}>\r\n                                                        <TableCell align=\"right\">{index + 1}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.lot}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.fromloc}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.item}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.qty1}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))\r\n\r\n                                            }\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={3}></TableCell>\r\n                                                <TableCell >total</TableCell>\r\n                                                <TableCell align=\"right\">{sumTotal}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container> */}\r\n\r\n            </Container >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport function CPrintDiaryReport(props) {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handlePrint} >Print  </Button>\r\n            {/* <ComponentToPrint ref={componentRef} /> */}\r\n            <div style={{ textAlign: \"center\", height: 0, overflowY: \"scroll\", }}>\r\n                <ComponentToPrint\r\n                    ref={componentRef}\r\n                    DairyReportLine={props.DairyReportLine}\r\n                    DairyReportCountLotByWCDate = {props.DairyReportCountLotByWCDate}\r\n                />\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, TextField, IconButton, InputBase, Divider, TableRow, TableCell } from '@material-ui/core';\r\nimport CAutocomplete from './CAutocomplete';\r\nimport API from './api';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport MaterialTable from 'material-table';\r\nimport tableIcons from './tableIcons'\r\nimport { CPrintDiaryReport } from './CPrintDiaryReport';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // height: '92vh',\r\n        width: '100%',\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        margin: 5,\r\n        width: \"100%\",\r\n        padding: 0\r\n    },\r\n    CheckLocationModal: {\r\n        width: '50%',\r\n        margin: 50\r\n    }\r\n});\r\n\r\n\r\nfunction CGroupTextBoxs(props) {\r\n    const classes = useStyles();\r\n    const [location, setLocation] = useState([])\r\n    const [w_c, setw_c] = useState([])\r\n\r\n    const [DairyReportCountLotByWC, SetDairyReportCountLotByWC] = useState([])\r\n    const [DairyReportCountLotByWCDate, SetDairyReportCountLotByWCDate] = useState([])\r\n    const [DairyReportLine, SetDairyReportLine] = useState([])\r\n\r\n\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [OpenDairyReportModal, setOpenDairyReportModal] = useState(false)\r\n    const handleClose = () => { setOpenModal(false); };\r\n    const handleDairyReportModalClose = () => { setOpenDairyReportModal(false); };\r\n\r\n\r\n    useEffect(() => {\r\n        API.get(`module/API_QuantityMove/data.php?load=location_mst`)\r\n            .then(res => {\r\n                let loc = res.data.map(item => {\r\n                    return { title: item.loc }\r\n                });\r\n                setLocation(loc)\r\n            })\r\n\r\n        API.get(`module/API_QuantityMove/data.php?load=wc_mst`)\r\n            .then(res => {\r\n\r\n                let w_c = res.data.map(item => {\r\n                    return { title: item.wc }\r\n                });\r\n                console.log(w_c)\r\n                setw_c(w_c)\r\n            })\r\n    }, [])\r\n\r\n    const handleScanTag = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.handleScanTag(event.target.value)\r\n            document.getElementById('tagScan').value = \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const body = (\r\n        <div style={{ width: '85%', margin: '5%' }} >\r\n            <Paper >\r\n\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    title={\"จำนวน \" + props.ItemLoc.length + \" รายการ\"}\r\n                    columns={[\r\n                        { title: 'item', field: 'item', width: '400' },\r\n                        { title: 'description', field: 'description', width: '400' },\r\n                        { title: 'จำนวนมัด(Lot)', field: 'countlot', type: 'numeric' },\r\n                        { title: 'เส้น/มัด', field: 'Uf_pack', type: 'numeric' },\r\n                        { title: 'รวม', field: 'sumqty', type: 'numeric' },\r\n                    ]}\r\n                    data={props.ItemLoc}\r\n                    options={{\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '68vh',\r\n                        minBodyHeight: '68vh',\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div >\r\n    );\r\n\r\n    const bodyDairyReport = (\r\n        <div style={{ width: '97%', margin: '1%' }} >\r\n            <Paper >\r\n                <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                    <Grid item xs={3} container >\r\n                        <MaterialTable\r\n                            style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                            icons={tableIcons}\r\n                            title={\"เลือก Work Center\"}\r\n                            columns={[\r\n                                { title: 'work center', field: 'w_c', width: '400' },\r\n                                { title: 'จำนวนทั้งหมด', field: 'totalLot', width: '400', type: 'numeric' },\r\n                            ]}\r\n                            data={DairyReportCountLotByWC}\r\n                            options={{\r\n                                search: false,\r\n                                paging: false,\r\n                                maxBodyHeight: '68vh',\r\n                                minBodyHeight: '68vh',\r\n                            }}\r\n                            onRowClick={(event, rowData) => {\r\n                                console.log(rowData)\r\n                                API.get(`module/API_QuantityMove/data.php?load=DairyReportCountLotByWCDate&w_c=${rowData.w_c}`)\r\n                                    .then(res => {\r\n                                        let w_c = res.data.map(item => {\r\n                                            return {\r\n                                                w_c: item.w_c,\r\n                                                date: item.date,\r\n                                                totalPerday: item.totalPerday\r\n                                            }\r\n                                        });\r\n                                        SetDairyReportCountLotByWCDate(w_c)\r\n                                    })\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} container >\r\n                        <MaterialTable\r\n                            style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                            icons={tableIcons}\r\n                            title={\"เลือกวัน\"}\r\n                            columns={[\r\n                                { title: 'work center', field: 'w_c', width: '400' },\r\n                                { title: 'วัน', field: 'date', width: '400', type: \"date\" },\r\n                                { title: 'total Lot Perday', field: 'totalPerday', type: 'numeric' },\r\n                            ]}\r\n                            data={DairyReportCountLotByWCDate}\r\n                            options={{\r\n                                search: false,\r\n                                paging: false,\r\n                                maxBodyHeight: '68vh',\r\n                                minBodyHeight: '68vh',\r\n                            }}\r\n\r\n                            onRowClick={(event, rowData) => {\r\n                                console.log(rowData)\r\n                                API.get(`module/API_QuantityMove/data.php?load=DairyReportLine&w_c=${rowData.w_c}&date=${rowData.date}`)\r\n                                    .then(res => {\r\n                                        SetDairyReportLine(res.data)\r\n                                    })\r\n                            }}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} container >\r\n                        <MaterialTable\r\n                            style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                            icons={tableIcons}\r\n                            title={\"จำนวน\" + DairyReportLine.length + \"รายการ\"}\r\n                            columns={[\r\n                                { title: 'doc_num', field: 'doc_num', },\r\n                                { title: 'lot', field: 'lot', width: '400' },\r\n                                { title: 'toloc', field: 'toloc', width: '400' },\r\n                            ]}\r\n                            data={DairyReportLine}\r\n                            options={{\r\n                                search: false,\r\n                                paging: false,\r\n                                maxBodyHeight: '68vh',\r\n                                minBodyHeight: '68vh',\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} container style={{ justifyContent: \"center\" }}>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <CPrintDiaryReport\r\n                                DairyReportLine={DairyReportLine}\r\n                                DairyReportCountLotByWCDate = {DairyReportCountLotByWCDate}\r\n                            />\r\n                        </div>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </Paper>\r\n        </div >\r\n    );\r\n\r\n\r\n\r\n\r\n    const CheckLocationModal = () => {\r\n        setOpenModal(true)\r\n    }\r\n\r\n    const DairyReportModal = () => {\r\n        API.get(`module/API_QuantityMove/data.php?load=DairyReportCountLotByWC`)\r\n            .then(res => {\r\n                let w_c = res.data.map(item => {\r\n                    return { w_c: item.w_c, totalLot: item.totalLot }\r\n                });\r\n                SetDairyReportCountLotByWC(w_c)\r\n            })\r\n        setOpenDairyReportModal(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <div>\r\n                <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n                    {body}\r\n                </Modal>\r\n                <Modal open={OpenDairyReportModal} onClose={handleDairyReportModalClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n                    {bodyDairyReport}\r\n                </Modal>\r\n            </div>\r\n            <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                {(props.PageState) ?\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                        <Grid item md={2} container >\r\n                            <CAutocomplete label={\"Work center\"} selectValue={w_c} handleSelectValue={props.handlew_c} />\r\n                        </Grid>\r\n                        <Grid item md={2} container >\r\n                            <CAutocomplete label={\"Location ปลายทาง\"} selectValue={location} handleSelectValue={props.handleToLocation} />\r\n                        </Grid>\r\n                        <Grid item md={8} container >\r\n                            <TextField size=\"small\" label={\"Scan tag\"} id={\"tagScan\"} variant=\"outlined\" className={classes.textField} onKeyUp={handleScanTag} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                        <Grid item md={3} container >\r\n                            <TextField size=\"small\" label={\"Location ปลายทาง\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_loc} />\r\n                        </Grid>\r\n                        <Grid item md={2} container >\r\n                            <Button variant=\"contained\" color=\"primary\" startIcon={<FindInPageIcon />}\r\n                                style={{ margin: 10, fontSize: 7.8 }} disabled={(props.STS_qty_move_hdr_loc) ? false : true}\r\n                                onClick={CheckLocationModal} > item Location\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item md={3} container >\r\n                            <TextField size=\"small\" label={\"Document ID\"} variant=\"outlined\" className={classes.textField} value={props.DocNum} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Date\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_date} />\r\n                        </Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<FindInPageIcon />}\r\n                            style={{ margin: 10 }}\r\n                            onClick={DairyReportModal} > รายงานประจำวัน\r\n                            </Button>\r\n                    </>\r\n                    // CheckLocationModal\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default CGroupTextBoxs","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: 10,\r\n        width: '99%',\r\n        margin: 10\r\n    },\r\n});\r\n\r\nfunction MatTable(props) {\r\n    const classes = useStyles();\r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            MuiTableCell: {\r\n                root: {\r\n                    padding: '5px 5px',\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <ThemeProvider theme={theme}>\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    //title={\"Quantity Move List :\" + (props.qtyMoveList)? 0:props.qtyMoveList.length}\r\n                    title={\"Quantity Move List : \" + props.qtyMoveList.length + \" รายการ\"}\r\n                    columns={[\r\n                        { title: 'id', field: 'id' },\r\n                        { title: 'lot', field: 'lot',width: 200 },\r\n                        { title: 'From loc', field: 'loc',width: 100 },\r\n                        { title: 'item', field: 'item', width: 300 },\r\n                        { title: 'qty', field: 'qty1', type: 'numeric' },\r\n                        { title: 'unit', field: 'u_m' },\r\n                    ]}\r\n                    data={props.qtyMoveList}\r\n                    options={{\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '45vh',\r\n                        minBodyHeight: '45vh',\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default MatTable;\r\n","import React, { useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Container, Button, Box, Table } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n        const sumTotal = this.props.qtyMoveList.reduce((sum, number) => { return sum + number.qty1 }, 0)\r\n        return (\r\n            <Container >\r\n\r\n                <Container maxWidth=\"lg\" style={{ paddingTop: 50, width: \"99%\" }}  >\r\n                    <Grid container >\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Box border={1}>\r\n                                <p>\r\n                                    รายงานการย้าย Item Location\r\n                                </p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} paddingLeft={2}>\r\n                                <p>Document :  {this.props.DocNum}</p>\r\n                                <p>Location Destination :  {this.props.toLocation}</p>\r\n                                <p>เวลา : {this.props.STS_qty_move_hdr_date}</p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"simple table\" size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"right\">#</TableCell>\r\n                                                <TableCell align=\"center\">lot</TableCell>\r\n                                                <TableCell align=\"center\">From&nbsp;Location</TableCell>\r\n                                                <TableCell align=\"center\">item</TableCell>\r\n                                                <TableCell align=\"center\">เส้น/มัด</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.props.qtyMoveList\r\n\r\n                                                .filter((row) => {\r\n                                                    return row.qty1 > 1\r\n                                                })\r\n                                                .map((row, index) => (\r\n                                                    <TableRow key={row.id}>\r\n                                                        <TableCell align=\"right\">{index + 1}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.lot}</TableCell>\r\n                                                        <TableCell align=\"center\">{row.fromloc}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.item}</TableCell>\r\n                                                        <TableCell align=\"right\">{row.qty1}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))\r\n\r\n                                            }\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={3}></TableCell>\r\n                                                <TableCell >total</TableCell>\r\n                                                <TableCell align=\"right\">{sumTotal}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport function CPrintDocument(props) {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handlePrint} >Print  </Button>\r\n            {/* <ComponentToPrint ref={componentRef} /> */}\r\n            <div style={{ textAlign: \"center\", height: 0, overflowY: \"scroll\", }}>\r\n                <ComponentToPrint\r\n                    ref={componentRef}\r\n                    DocNum={props.DocNum}\r\n                    toLocation={props.toLocation}\r\n                    qtyMoveList={props.qtyMoveList}\r\n                    STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n                />\r\n                                \r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let i = 1;\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 100 / props.listLength));\r\n            if (i === props.listLength + 1) {\r\n                clearInterval(timer);\r\n                alert(\"ย้ายข้อมูลสำเร็จ\")\r\n                props.handleProcessSuccess(false)\r\n            }\r\n            i = i + 1;\r\n        }, 1200);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel value={progress} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\n\r\n\r\nexport default function ModalProgressSaving(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: \"80%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            margin: \"5%\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  เลขเอกสาร:{props.docNum}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  Location ปลายทาง:{props.toLocation}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  ทำการย้าย Location {props.qtyMoveList.length} รายการ</Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        <LinearProgressWithLabel\r\n                            listLength={props.qtyMoveList.length}\r\n                            handleProcessSuccess={props.handleProcessSuccess}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        {/* <CPrintDocument /> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container >\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CGroupTextBoxs from './CGroupTextBoxs';\r\nimport CMatTable from './CMatTable';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { CPrintDocument } from './CPrintDocument';\r\nimport API from './api';\r\nimport ModalProgressSaving from './ModalProgressSaving';\r\n\r\nfunction CCreate(props) {\r\n  const [toLocation, setToLocation] = useState()\r\n  const [w_c, setw_c] = useState(\"\")\r\n  const [qtyMoveList, setQtyMoveList] = useState([]);\r\n  const [docNum, setdocNum] = useState(\"\")\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [ProcessSuccess, setProcessSuccess] = useState(false)\r\n  const handleToLocation = (location) => { setToLocation(location) }\r\n  const handlew_c = (work_center) => {\r\n    setw_c(work_center)\r\n    // console.log(work_center);\r\n    // localStorage.setItem('w_c',work_center) \r\n    // console.log(localStorage.w_c);\r\n\r\n  }\r\n  const handleClose = () => { setOpenModal(false); };\r\n  const handleProcessSuccess = (ProcessSuccess) => {\r\n    setOpenModal(false);\r\n    setProcessSuccess(ProcessSuccess);\r\n    props.setPageState(ProcessSuccess)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setOpenModal(false)\r\n  }, [ProcessSuccess])\r\n  const handleScanTag = (scanTag) => {\r\n    API.get(`module/API_QuantityMove/data.php?load=SearchTagDetail&tag_id=${scanTag}`)\r\n      .then(res => {\r\n        const items = res.data\r\n        if (res.data.length > 0) {\r\n          setQtyMoveList(qtyMoveList => [...qtyMoveList, { id: items[0].id, lot: items[0].lot, loc: items[0].loc, item: items[0].item, qty1: items[0].qty1, u_m: items[0].u_m, }])\r\n        } else {\r\n          alert(\"ไม่พบ Tags\")\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (!toLocation || qtyMoveList.length == 0) {\r\n      alert(\"กรุณากรอก location ปลายทาง หรือ scan barcode อย่างน้อย 1 lot\")\r\n      setOpenModal(false);\r\n    } else {\r\n      setOpenModal(true);\r\n      //Insert QTY MOVE HEARDER\r\n      API.get(`module/API_QuantityMove/data.php?load=moveqty_create_hdr&toLoc=${toLocation}&w_c=${w_c}`)\r\n        .then(res => {\r\n          const moveqty_hdr = res.data\r\n          setdocNum(moveqty_hdr.doc_num)\r\n          setToLocation(moveqty_hdr.loc)\r\n          if (qtyMoveList.length > 0) {\r\n            let i = 1;\r\n            //Insert QTY LINE \r\n            const timer = setInterval(() => {\r\n              API.get(`module/API_QuantityMove/data.php?load=moveqty_create_line&docnum=${moveqty_hdr.doc_num}&docline=${i}&tagnum=${qtyMoveList[i - 1].id}&toLoc=${toLocation}`)\r\n                .then(res => {\r\n                  console.log(\"Call API moveqty_create_line\")\r\n                })\r\n              if (i === qtyMoveList.length) {\r\n                clearInterval(timer)\r\n                setQtyMoveList([])\r\n                //setOpen(false);\r\n              }\r\n              i = i + 1;\r\n            }, 1000);\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <div >\r\n      <ModalProgressSaving\r\n        docNum={docNum}\r\n        toLocation={toLocation}\r\n        qtyMoveList={qtyMoveList}\r\n        handleProcessSuccess={handleProcessSuccess}\r\n      />\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n      <div>\r\n        <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n          {body}\r\n        </Modal>\r\n      </div>\r\n      <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n        <CGroupTextBoxs\r\n          handleScanTag={handleScanTag}\r\n          handleToLocation={handleToLocation}\r\n          handlew_c={handlew_c}\r\n          DocNum={props.DocNum}\r\n          STS_qty_move_hdr_loc={props.STS_qty_move_hdr_loc}\r\n          STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n          PageState={props.PageState}\r\n          qtyMoveList={qtyMoveList}\r\n          ItemLoc={props.ItemLoc}\r\n        />\r\n\r\n        <CMatTable qtyMoveList={(props.PageState) ? qtyMoveList : props.STS_qty_move_line} />\r\n        <div style={{ width: \"100%\", padding: 15 }}>\r\n          {(props.PageState) ?\r\n            <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handleSubmit} >Save  </Button> :\r\n            <>\r\n              <CPrintDocument\r\n                DocNum={props.DocNum}\r\n                toLocation={props.STS_qty_move_hdr_loc}\r\n                qtyMoveList={props.STS_qty_move_line}\r\n                STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n              />\r\n              {/* <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} style={{ margin: 10 }}  >รายงานประจำวัน  </Button> */}\r\n\r\n            </>\r\n          }\r\n          {/* <Button variant=\"contained\" color=\"default\" startIcon={<DeleteIcon />} style={{ margin: 10 }} > Clear </Button> */}\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CCreate;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport API from './api';\r\n\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default function DenseTable(props) {\r\n\r\n    const theme = createMuiTheme({\r\n        overrides: {\r\n            MuiTableCell: {\r\n                root: {\r\n                    padding: '10px 15px',\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    const handleClickSelectDoc = (row) => {\r\n        props.handleDocNum(row.doc_num)\r\n        props.handleSTS_qty_move_hdr_loc(row.loc)\r\n        props.handleSTS_qty_move_hdr_date(row.create_date.date)\r\n        API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_line&doc_num=${row.doc_num}`)\r\n            .then(res => {\r\n                props.handleSTS_qty_move_line(res.data)\r\n            })\r\n\r\n        API.get(`module/API_QuantityMove/data.php?load=checkItemLotLoc&loc=${row.loc}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                props.handlecheckItemLotLoc(res.data)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Paper>\r\n            <ThemeProvider theme={theme}>\r\n                <MaterialTable\r\n                    style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                    icons={tableIcons}\r\n                    title={\"รายงานการย้าย Item\"}\r\n                    columns={[\r\n                        { title: 'Doc num', field: 'doc_num' },\r\n                        { title: 'date', field: 'create_date.date', type: 'date' },\r\n                        { title: 'To location', field: 'loc' },\r\n                    ]}\r\n                    onRowClick={(event, rowData) => { \r\n                        console.log(event)\r\n                        handleClickSelectDoc(rowData) \r\n                    }}\r\n                    data={props.STS_qty_move_hrd}\r\n                    options={{\r\n                        actionsColumnIndex:-1,\r\n                        search: false,\r\n                        paging: false,\r\n                        maxBodyHeight: '68vh',\r\n                        minBodyHeight: '68vh',\r\n                        filtering: true\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Switch } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport CCreate from './view/QuantityMove/CCreate';\nimport DocumentHearderList from './view/QuantityMove/DocumentHearderList';\nimport API from './view/QuantityMove/api';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nfunction App() {\n  const [PageState, setPageState] = useState(false)\n  const toggleChecked = () => setPageState((prev) => !prev) //State Page Create or View Document\n  const [DocNum, setDocNum] = useState(\"\")\n  const [STS_qty_move_hdr_loc, setSTS_qty_move_hdr_loc] = useState(\"\")\n  const [STS_qty_move_hdr_date, setSTS_qty_move_hdr_date] = useState(\"\")\n  const [STS_qty_move_line, setSTS_qty_move_line] = useState([])\n  const [STS_qty_move_hrd, setSTS_qty_move_hrd] = useState([])\n  const [ItemLoc, setItemLoc] = useState([])\n  const handleDocNum = (DocNum) => setDocNum(DocNum) // Set Document Number\n  const handleSTS_qty_move_hdr_loc = (loc) => setSTS_qty_move_hdr_loc(loc) //Set Location\n  const handleSTS_qty_move_hdr_date = (date) => { setSTS_qty_move_hdr_date(date) } //Set Location\n  const handleSTS_qty_move_line = (STS_qty_move_line) => setSTS_qty_move_line(STS_qty_move_line) //\n  const handlecheckItemLotLoc = (ItemLoc) => setItemLoc(ItemLoc)\n  const handleSetPageState = (pageState) => { setPageState(pageState)}\n\n  const useStyles = makeStyles({\n    MainContainer: {\n      padding: 5\n    }\n  });\n\n  useEffect(() => {\n    API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_hrd`)\n      .then(res => {\n        setSTS_qty_move_hrd(res.data)\n      })\n      // localStorage.setItem('w_c','') \n      // console.log(localStorage);\n      // console.log(localStorage.w_c);\n      \n  }, [PageState])\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\" className={classes.MainContainer}>\n      <Grid container spacing={3}>\n        <Grid item xs={(PageState) ? 2 : 5} hidden={(PageState) ? true : false} style={{ textAlign: \"center\" }}>\n        ย้ายโดยใช้รถ / ย้ายของผลิต / ย้ายของภายใน\n          <DocumentHearderList\n            STS_qty_move_hrd={STS_qty_move_hrd}\n            handleDocNum={handleDocNum}\n            handleSTS_qty_move_hdr_loc={handleSTS_qty_move_hdr_loc}\n            handleSTS_qty_move_hdr_date={handleSTS_qty_move_hdr_date}\n            handleSTS_qty_move_line={handleSTS_qty_move_line}\n            handlecheckItemLotLoc={handlecheckItemLotLoc}\n          />\n        </Grid>\n        <Grid item xs={(PageState) ? 12 : 7}>\n          {<Switch checked={PageState} onChange={toggleChecked} />}\n          {(PageState) ? \"Create\" : \"View\"}\n          <CCreate\n            PageState={PageState}\n            DocNum={DocNum}\n            STS_qty_move_hdr_loc={STS_qty_move_hdr_loc}\n            STS_qty_move_hdr_date={STS_qty_move_hdr_date}\n            STS_qty_move_line={STS_qty_move_line}\n            setPageState={handleSetPageState}\n            ItemLoc={ItemLoc}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst islocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (islocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}