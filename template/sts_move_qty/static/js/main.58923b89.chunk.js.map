{"version":3,"sources":["view/QuantityMove/CAutocomplete.js","view/QuantityMove/api.js","view/QuantityMove/CGroupTextBoxs.js","view/QuantityMove/tableIcons.js","view/QuantityMove/CMatTable.js","view/QuantityMove/CPrintDocument.js","view/QuantityMove/LinearProgressWithLabel.js","view/QuantityMove/ModalProgressSaving.js","view/QuantityMove/CCreate.js","view/QuantityMove/DocumentHearderList.js","App.js","serviceWorker.js","index.js"],"names":["CAutocomplete","props","Autocomplete","id","options","selectValue","getOptionLabel","option","title","style","width","margin","onChange","event","values","handleSelectValue","renderInput","params","TextField","label","variant","size","axios","create","baseURL","useStyles","makeStyles","root","textField","padding","CGroupTextBoxs","classes","useState","location","setLocation","useEffect","API","get","then","res","loc","data","map","item","Paper","className","Grid","container","alignItems","direction","justify","spacing","PageState","md","handleToLocation","onKeyUp","key","handleScanTag","target","value","document","getElementById","STS_qty_move_hdr_loc","DocNum","STS_qty_move_hdr_date","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PrintIcon","FormatListNumberedIcon","CropFreeIcon","MatTable","overflowX","icons","tableIcons","qtyMoveList","length","columns","field","type","search","paging","maxBodyHeight","minBodyHeight","ComponentToPrint","console","log","Container","maxWidth","paddingTop","xs","textAlign","Box","border","paddingLeft","this","toLocation","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","index","lot","fromloc","qty1","React","Component","CPrintDocument","componentRef","useRef","handlePrint","useReactToPrint","content","current","Button","color","startIcon","onClick","height","overflowY","LinearProgressWithLabel","display","mr","LinearProgress","minWidth","Typography","Math","round","LinearWithValueLabel","progress","setProgress","i","timer","setInterval","prevProgress","listLength","clearInterval","alert","handleProcessSuccess","ModalProgressSaving","theme","paper","position","backgroundColor","palette","background","boxShadow","shadows","docNum","CCreate","setToLocation","setQtyMoveList","setdocNum","openModal","setOpenModal","ProcessSuccess","setProcessSuccess","body","setPageState","Modal","open","onClose","aria-labelledby","aria-describedby","scanTag","items","u_m","CMatTable","STS_qty_move_line","moveqty_hdr","doc_num","DenseTable","onRowClick","rowData","handleDocNum","handleSTS_qty_move_hdr_loc","handleSTS_qty_move_hdr_date","create_date","date","handleSTS_qty_move_line","STS_qty_move_hrd","App","setDocNum","setSTS_qty_move_hdr_loc","setSTS_qty_move_hdr_date","setSTS_qty_move_line","setSTS_qty_move_hrd","hidden","Switch","checked","prev","pageState","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58923b89.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function CAutocomplete(props) {\r\n    const onSelectChange = (event, values)=>{\r\n        props.handleSelectValue(values.title)\r\n    }\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.selectValue}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: \"100%\",margin: 10  }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) =>\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    variant=\"outlined\"\r\n                />}\r\n            size=\"small\"\r\n        />\r\n    );\r\n}\r\n","import axios from 'axios';\r\nexport default axios.create({\r\n  //    http://localhost:88/sts_web_center_new/\r\n  //    http://172.18.1.194/sts_web_center/\r\n  baseURL: `http://172.18.1.194/sts_web_center/`\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport CAutocomplete from './CAutocomplete';\r\nimport API from './api';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // height: '92vh',\r\n        width: '100%',\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        margin: 5,\r\n        width: \"100%\",\r\n        padding: 0\r\n    }\r\n});\r\n\r\nfunction CGroupTextBoxs(props) {\r\n    const classes = useStyles();\r\n    const [location, setLocation] = useState([])\r\n\r\n    useEffect(() => {\r\n        API.get(`module/API_QuantityMove/data.php?load=location_mst`)\r\n            .then(res => {\r\n                let loc = res.data.map(item => {\r\n                    return { title: item.loc }\r\n                });\r\n                setLocation(loc)\r\n            })\r\n    }, [])\r\n\r\n    const handleScanTag = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.handleScanTag(event.target.value)\r\n            document.getElementById('tagScan').value = \"\"\r\n        }\r\n    }\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                {(props.PageState) ?\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                        <Grid item md={4} container >\r\n                            <CAutocomplete label={\"Location ปลายทาง\"} selectValue={location} handleSelectValue={props.handleToLocation} />\r\n                        </Grid>\r\n                        <Grid item md={8} container >\r\n                            <TextField size=\"small\" label={\"Scan tag\"} id={\"tagScan\"} variant=\"outlined\" className={classes.textField} onKeyUp={handleScanTag} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Location ปลายทาง\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_loc} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Move Qty Document ID\"} variant=\"outlined\" className={classes.textField} value={props.DocNum} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Date\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_date} />\r\n                        </Grid>\r\n                    </>\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default CGroupTextBoxs","import React from 'react'\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport { forwardRef } from \"react\";\r\n\r\n\r\n\r\nexport default {\r\n    \r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        PrintIcon: forwardRef((props, ref) => <PrintIcon {...props} ref={ref} />),\r\n        FormatListNumberedIcon: forwardRef((props, ref) => <FormatListNumberedIcon {...props} ref={ref} />),\r\n        CropFreeIcon: forwardRef((props, ref) => (\r\n            <CropFreeIcon {...props} ref={ref} />\r\n        )),\r\n    \r\n}\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: 10,\r\n        width: '99%',\r\n        margin: 10\r\n    },\r\n});\r\n\r\nfunction MatTable(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <MaterialTable\r\n                style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                icons={tableIcons}\r\n                //title={\"Quantity Move List :\" + (props.qtyMoveList)? 0:props.qtyMoveList.length}\r\n                title={\"Quantity Move List :\" + props.qtyMoveList.length}\r\n                columns={[\r\n                    { title: 'id', field: 'id' },\r\n                    { title: 'lot', field: 'lot' },\r\n                    { title: 'From location', field: 'loc' },\r\n                    { title: 'item', field: 'item' },\r\n                    { title: 'เส้น/มัด', field: 'qty1',type:'numeric' },\r\n                    { title: 'unit', field: 'u_m' },\r\n                ]}\r\n                data={props.qtyMoveList}\r\n                options={{\r\n                    search: false,\r\n                    paging: false,\r\n                    maxBodyHeight: '45vh',\r\n                    minBodyHeight: '45vh',\r\n                }}\r\n            />\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default MatTable;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Container, Button, Modal, Box, Table } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PagePrintDocument from './PagePrintDocument';\r\n\r\n\r\n\r\n\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\n\r\nclass ComponentToPrint extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Container >\r\n\r\n                <Container maxWidth=\"lg\" style={{ paddingTop: 50, width: \"99%\" }}  >\r\n                    <Grid container >\r\n                        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                            <Box border={1}>\r\n                                <p>\r\n                                    รายงานการย้าย Item Location\r\n                                </p>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} paddingLeft={2}>\r\n                                <p>Document :  {this.props.DocNum}</p>\r\n                                <p>Location Destination :  {this.props.toLocation}</p>\r\n                                <p>เวลา : {this.props.STS_qty_move_hdr_date}</p>\r\n                            </Box>\r\n                        </Grid>\r\n                        {/* <Grid item xs={6}>\r\n                            <Box border={1} paddingLeft={2}>\r\n\r\n                            </Box>\r\n                        </Grid> */}\r\n                        <Grid item xs={12}>\r\n                            <Box border={1} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"simple table\" size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"right\">#</TableCell>\r\n                                                <TableCell align=\"right\">lot</TableCell>\r\n                                                <TableCell align=\"right\">From&nbsp;Location</TableCell>\r\n                                                <TableCell align=\"right\">item</TableCell>\r\n                                                <TableCell align=\"right\">เส้น/มัด</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.props.qtyMoveList.map((row, index) => (\r\n                                                <TableRow key={row.id}>\r\n                                                    <TableCell align=\"right\">{index + 1}</TableCell>\r\n                                                    <TableCell align=\"right\">{row.lot}</TableCell>\r\n                                                    <TableCell align=\"right\">{row.fromloc}</TableCell>\r\n                                                    <TableCell align=\"right\">{row.item}</TableCell>\r\n                                                    <TableCell align=\"right\">{row.qty1}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport function CPrintDocument(props) {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handlePrint} >Print  </Button>\r\n            {/* <ComponentToPrint ref={componentRef} /> */}\r\n            <div style={{ textAlign: \"center\", height: 0, overflowY: \"scroll\", }}>\r\n\r\n\r\n                <ComponentToPrint\r\n                    ref={componentRef}\r\n                    DocNum={props.DocNum}\r\n                    toLocation={props.toLocation}\r\n                    qtyMoveList={props.qtyMoveList}\r\n                    STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let i = 1;\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 100 / props.listLength));\r\n            if (i === props.listLength + 1) {\r\n                clearInterval(timer);\r\n                alert(\"ย้ายข้อมูลสำเร็จ\")\r\n                props.handleProcessSuccess(false)\r\n            }\r\n            i = i + 1;\r\n        }, 1200);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel value={progress} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\n\r\n\r\nexport default function ModalProgressSaving(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: \"80%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            margin: \"5%\"\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  เลขเอกสาร:{props.docNum}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  Location ปลายทาง:{props.toLocation}</Grid>\r\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>  ทำการย้าย Location {props.qtyMoveList.length} รายการ</Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        <LinearProgressWithLabel\r\n                            listLength={props.qtyMoveList.length}\r\n                            handleProcessSuccess={props.handleProcessSuccess}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n                        {/* <CPrintDocument /> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container >\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CGroupTextBoxs from './CGroupTextBoxs';\r\nimport CMatTable from './CMatTable';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { CPrintDocument } from './CPrintDocument';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\nimport API from './api';\r\nimport ModalProgressSaving from './ModalProgressSaving';\r\n\r\nfunction CCreate(props) {\r\n  const [toLocation, setToLocation] = useState()\r\n  const [qtyMoveList, setQtyMoveList] = useState([]);\r\n  const [docNum, setdocNum] = useState(\"\")\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [ProcessSuccess, setProcessSuccess] = useState(false)\r\n  const handleToLocation = (location) => { setToLocation(location) }\r\n  const handleClose = () => { setOpenModal(false); };\r\n  const handleProcessSuccess = (ProcessSuccess) => {\r\n    setOpenModal(false);\r\n    setProcessSuccess(ProcessSuccess);\r\n    props.setPageState(ProcessSuccess)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setOpenModal(false)\r\n  }, [ProcessSuccess])\r\n  const handleScanTag = (scanTag) => {\r\n    API.get(`module/API_QuantityMove/data.php?load=SearchTagDetail&tag_id=${scanTag}`)\r\n      .then(res => {\r\n        const items = res.data\r\n        if (res.data.length > 0) {\r\n          setQtyMoveList(qtyMoveList => [...qtyMoveList, { id: items[0].id, lot: items[0].lot, loc: items[0].loc, item: items[0].item, qty1: items[0].qty1, u_m: items[0].u_m, }])\r\n        } else {\r\n          alert(\"ไม่พบ Tags\")\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (!toLocation) {\r\n      alert(\"กรุณากรอก location ปลายทาง\")\r\n      setOpenModal(false);\r\n    } else {\r\n      setOpenModal(true);\r\n      //Insert QTY MOVE HEARDER\r\n      API.get(`module/API_QuantityMove/data.php?load=moveqty_create_hdr&toLoc=${toLocation}`)\r\n        .then(res => {\r\n          const moveqty_hdr = res.data\r\n          setdocNum(moveqty_hdr.doc_num)\r\n          setToLocation(moveqty_hdr.loc)\r\n          if (qtyMoveList.length > 0) {\r\n            let i = 1;\r\n            //Insert QTY LINE \r\n            const timer = setInterval(() => {\r\n              API.get(`module/API_QuantityMove/data.php?load=moveqty_create_line&docnum=${moveqty_hdr.doc_num}&docline=${i}&tagnum=${qtyMoveList[i - 1].id}&toLoc=${toLocation}`)\r\n                .then(res => {\r\n                  console.log(\"Call API moveqty_create_line\")\r\n                })\r\n              if (i === qtyMoveList.length) {\r\n                clearInterval(timer)\r\n                setQtyMoveList([])\r\n                //setOpen(false);\r\n              }\r\n              i = i + 1;\r\n            }, 1000);\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const body = (\r\n    <div >\r\n      <ModalProgressSaving\r\n        docNum={docNum}\r\n        toLocation={toLocation}\r\n        qtyMoveList={qtyMoveList}\r\n        handleProcessSuccess={handleProcessSuccess}\r\n      />\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n      <div>\r\n        <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n          {body}\r\n        </Modal>\r\n      </div>\r\n      <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n        <CGroupTextBoxs\r\n          handleScanTag={handleScanTag}\r\n          handleToLocation={handleToLocation}\r\n          DocNum={props.DocNum}\r\n          STS_qty_move_hdr_loc={props.STS_qty_move_hdr_loc}\r\n          STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n          PageState={props.PageState}\r\n          qtyMoveList={qtyMoveList}\r\n        />\r\n\r\n        <CMatTable qtyMoveList={(props.PageState) ? qtyMoveList : props.STS_qty_move_line} />\r\n        <div style={{ width: \"100%\", padding: 15 }}>\r\n          {(props.PageState) ?\r\n            <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handleSubmit} >Save  </Button> :\r\n            <CPrintDocument\r\n              DocNum={props.DocNum}\r\n              toLocation = {props.STS_qty_move_hdr_loc}\r\n              qtyMoveList={props.STS_qty_move_line}\r\n              STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n            />\r\n          }\r\n          {/* <Button variant=\"contained\" color=\"default\" startIcon={<DeleteIcon />} style={{ margin: 10 }} > Clear </Button> */}\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CCreate;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport API from './api';\r\n\r\nexport default function DenseTable(props) {\r\n\r\n    const handleClickSelectDoc = (row) => {\r\n        props.handleDocNum(row.doc_num)\r\n        props.handleSTS_qty_move_hdr_loc(row.loc)\r\n        props.handleSTS_qty_move_hdr_date(row.create_date.date)\r\n        API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_line&doc_num=${row.doc_num}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                props.handleSTS_qty_move_line(res.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Paper>\r\n            <MaterialTable\r\n                style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                icons={tableIcons}\r\n                title={\"Document List\"}\r\n                columns={[\r\n                    { title: 'Doc num', field: 'doc_num' },\r\n                    { title: 'date', field: 'create_date.date', type: 'date' },\r\n                    { title: 'To location', field: 'loc' },\r\n                ]}\r\n                onRowClick={(event, rowData) => { handleClickSelectDoc(rowData) }}\r\n                data={props.STS_qty_move_hrd}\r\n                options={{\r\n                    search: false,\r\n                    paging: false,\r\n                    maxBodyHeight: '68vh',\r\n                    minBodyHeight: '68vh',\r\n                }}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Switch } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport CCreate from './view/QuantityMove/CCreate';\nimport DocumentHearderList from './view/QuantityMove/DocumentHearderList';\nimport API from './view/QuantityMove/api';\nimport PagePrintDocument from './view/QuantityMove/PagePrintDocument';\n\n\nfunction App() {\n  const [PageState, setPageState] = useState(false)\n  const toggleChecked = () => setPageState((prev) => !prev) //State Page Create or View Document\n  const [DocNum, setDocNum] = useState(\"\")\n  const [STS_qty_move_hdr_loc, setSTS_qty_move_hdr_loc] = useState(\"\")\n  const [STS_qty_move_hdr_date, setSTS_qty_move_hdr_date] = useState(\"\")\n  const [STS_qty_move_line, setSTS_qty_move_line] = useState([])\n  const [STS_qty_move_hrd, setSTS_qty_move_hrd] = useState([])\n\n  const handleDocNum = (DocNum) => setDocNum(DocNum) // Set Document Number\n  const handleSTS_qty_move_hdr_loc = (loc) => setSTS_qty_move_hdr_loc(loc) //Set Location\n  const handleSTS_qty_move_hdr_date = (date) => { setSTS_qty_move_hdr_date(date) } //Set Location\n  const handleSTS_qty_move_line = (STS_qty_move_line) => setSTS_qty_move_line(STS_qty_move_line) //\n\n  const handleSetPageState = (pageState) => {\n    setPageState(pageState)\n  }\n  useEffect(() => {\n    API.get(`module/API_QuantityMove/data.php?load=STS_qty_move_hrd`)\n      .then(res => {\n        setSTS_qty_move_hrd(res.data)\n      })\n  }, [PageState])\n  return (\n    <Container maxWidth=\"lg\" style={{ padding: 5 }}>\n      {/* <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <PagePrintDocument />\n        </Grid>\n      </Grid> */}\n\n      <Grid container spacing={3}>\n        <Grid item xs={(PageState) ? 2 : 5} hidden={(PageState) ? true : false} style={{ textAlign: \"center\" }}>\n          <DocumentHearderList\n            STS_qty_move_hrd={STS_qty_move_hrd}\n            handleDocNum={handleDocNum}\n            handleSTS_qty_move_hdr_loc={handleSTS_qty_move_hdr_loc}\n            handleSTS_qty_move_hdr_date={handleSTS_qty_move_hdr_date}\n            handleSTS_qty_move_line={handleSTS_qty_move_line}\n          />\n        </Grid>\n        <Grid item xs={(PageState) ? 12 : 7}>\n          {<Switch checked={PageState} onChange={toggleChecked} />}\n          {(PageState) ? \"Create\" : \"View\"}\n          \n          <CCreate\n            PageState={PageState}\n            DocNum={DocNum}\n            STS_qty_move_hdr_loc={STS_qty_move_hdr_loc}\n            STS_qty_move_hdr_date={STS_qty_move_hdr_date}\n            STS_qty_move_line={STS_qty_move_line}\n            setPageState={handleSetPageState}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst islocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (islocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}