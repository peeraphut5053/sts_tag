{"version":3,"sources":["view/QuantityMove/CAutocomplete.js","view/QuantityMove/CGroupTextBoxs.js","view/QuantityMove/tableIcons.js","view/QuantityMove/CMatTable.js","view/QuantityMove/CPrintDocument.js","view/QuantityMove/LinearProgressWithLabel.js","view/QuantityMove/CCreate.js","view/QuantityMove/DocumentHearderList.js","App.js","serviceWorker.js","index.js"],"names":["CAutocomplete","props","Autocomplete","id","options","selectValue","getOptionLabel","option","title","style","width","margin","onChange","event","values","handleSelectValue","renderInput","params","TextField","label","variant","size","useStyles","makeStyles","root","textField","padding","CGroupTextBoxs","classes","useState","location","setLocation","useEffect","Axios","get","then","res","loc","data","map","item","Paper","className","Grid","container","alignItems","direction","justify","spacing","PageState","md","handleToLocation","onKeyUp","key","handleScanTag","target","value","document","getElementById","STS_qty_move_hdr_loc","DocNum","STS_qty_move_hdr_date","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PrintIcon","FormatListNumberedIcon","CropFreeIcon","MatTable","overflowX","icons","tableIcons","qtyMoveList","length","columns","field","type","search","paging","maxBodyHeight","minBodyHeight","ComponentToPrint","Container","textAlign","React","Component","CPrintDocument","componentRef","useRef","handlePrint","useReactToPrint","content","current","visibility","Button","color","startIcon","onClick","LinearProgressWithLabel","Box","display","mr","LinearProgress","minWidth","Typography","Math","round","LinearWithValueLabel","progress","setProgress","i","timer","setInterval","prevProgress","listLength","console","log","clearInterval","alert","handleProcessSuccess","CCreate","toLocation","setToLocation","setQtyMoveList","docNum","setdocNum","openModal","setOpenModal","ProcessSuccess","setProcessSuccess","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","body","maxWidth","xs","setPageState","Modal","open","onClose","aria-labelledby","aria-describedby","scanTag","items","lot","qty1","u_m","CMatTable","STS_qty_move_line","moveqty_hdr","doc_num","DenseTable","onRowClick","rowData","row","handleDocNum","handleSTS_qty_move_hdr_loc","handleSTS_qty_move_hdr_date","create_date","date","handleSTS_qty_move_line","STS_qty_move_hrd","App","setDocNum","setSTS_qty_move_hdr_loc","setSTS_qty_move_hdr_date","setSTS_qty_move_line","setSTS_qty_move_hrd","hidden","Switch","checked","prev","pageState","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65cae8ee.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function CAutocomplete(props) {\r\n    const onSelectChange = (event, values)=>{\r\n        props.handleSelectValue(values.title)\r\n    }\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.selectValue}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: \"100%\",margin: 10  }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) =>\r\n                <TextField\r\n                    {...params}\r\n                    label={props.label}\r\n                    variant=\"outlined\"\r\n                />}\r\n            size=\"small\"\r\n        />\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid,  TextField } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport CAutocomplete from './CAutocomplete';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        // height: '92vh',\r\n        width: '100%',\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        margin: 5,\r\n        width: \"100%\",\r\n        padding: 0\r\n    }\r\n});\r\n\r\nfunction CGroupTextBoxs(props) {\r\n    const classes = useStyles();\r\n    const [location, setLocation] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=location_mst`)\r\n            .then(res => {\r\n                let loc = res.data.map(item => {\r\n                    return { title: item.loc }\r\n                });\r\n                setLocation(loc)\r\n            })\r\n       \r\n    }, [])\r\n\r\n    const handleScanTag = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.handleScanTag(event.target.value)\r\n            document.getElementById('tagScan').value = \"\"\r\n        }\r\n    }\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                {(props.PageState) ?\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"space-between\" spacing={0}>\r\n                        <Grid item md={4} container >\r\n                            <CAutocomplete label={\"Location ปลายทาง\"} selectValue={location} handleSelectValue={props.handleToLocation} />\r\n                        </Grid>\r\n                        <Grid item md={8} container >\r\n                            <TextField size=\"small\" label={\"Scan tag\"} id={\"tagScan\"} variant=\"outlined\" className={classes.textField} onKeyUp={handleScanTag} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Location ปลายทาง\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_loc} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Move Qty Document ID\"} variant=\"outlined\" className={classes.textField} value={props.DocNum} />\r\n                        </Grid>\r\n                        <Grid item md={4} container >\r\n                            <TextField size=\"small\" label={\"Date\"} variant=\"outlined\" className={classes.textField} value={props.STS_qty_move_hdr_date} />\r\n                        </Grid>\r\n                    </>\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default CGroupTextBoxs","import React from 'react'\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport { forwardRef } from \"react\";\r\n\r\n\r\n\r\nexport default {\r\n    \r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        PrintIcon: forwardRef((props, ref) => <PrintIcon {...props} ref={ref} />),\r\n        FormatListNumberedIcon: forwardRef((props, ref) => <FormatListNumberedIcon {...props} ref={ref} />),\r\n        CropFreeIcon: forwardRef((props, ref) => (\r\n            <CropFreeIcon {...props} ref={ref} />\r\n        )),\r\n    \r\n}\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: 10,\r\n        width: '99%',\r\n        margin: 10\r\n    },\r\n});\r\n\r\nfunction MatTable(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <MaterialTable\r\n                style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                icons={tableIcons}\r\n                //title={\"Quantity Move List :\" + (props.qtyMoveList)? 0:props.qtyMoveList.length}\r\n                title={\"Quantity Move List :\" + props.qtyMoveList.length}\r\n                columns={[\r\n                    { title: 'id', field: 'id' },\r\n                    { title: 'lot', field: 'lot' },\r\n                    { title: 'From location', field: 'loc' },\r\n                    { title: 'item', field: 'item' },\r\n                    { title: 'เส้น/มัด', field: 'qty1',type:'numeric' },\r\n                    { title: 'unit', field: 'u_m' },\r\n                ]}\r\n                data={props.qtyMoveList}\r\n                options={{\r\n                    search: false,\r\n                    paging: false,\r\n                    maxBodyHeight: '50vh',\r\n                    minBodyHeight: '50vh',\r\n                }}\r\n            />\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default MatTable;\r\n","import React, { useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Container,  Button } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n                    <br></br>\r\n                123456\r\n                </Grid>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport function CPrintDocument() {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} style={{ textAlign: \"center\", visibility: \"hidden\" }}>\r\n                <ComponentToPrint ref={componentRef} />\r\n            </Grid>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handlePrint} >Print  </Button>\r\n        </>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props}  />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        let i = 1;\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 100/props.listLength));\r\n            console.log(i)\r\n            if (i === props.listLength + 1) {\r\n                clearInterval(timer);\r\n                alert(\"ย้ายข้อมูลสำเร็จ\")\r\n                props.handleProcessSuccess(false)\r\n            }\r\n            i = i + 1;\r\n        }, 1200);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel value={progress}  />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Modal } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CGroupTextBoxs from './CGroupTextBoxs';\r\nimport CMatTable from './CMatTable';\r\nimport Axios from 'axios';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { CPrintDocument } from './CPrintDocument';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgressWithLabel from './LinearProgressWithLabel'\r\n\r\nfunction CCreate(props) {\r\n  const [toLocation, setToLocation] = useState()\r\n  const [qtyMoveList, setQtyMoveList] = useState([]);\r\n  const [docNum, setdocNum] = useState(\"\")\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [ProcessSuccess, setProcessSuccess] = useState(false)\r\n  const handleToLocation = (location) => { setToLocation(location) }\r\n  const handleClose = () => { setOpenModal(false); };\r\n  const handleProcessSuccess = (ProcessSuccess) => {\r\n    setOpenModal(false);\r\n    setProcessSuccess(ProcessSuccess);\r\n    props.setPageState(ProcessSuccess)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(openModal);\r\n    setOpenModal(false)\r\n  }, [ProcessSuccess])\r\n  const handleScanTag = (scanTag) => {\r\n    Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=SearchTagDetail&tag_id=${scanTag}`)\r\n      .then(res => {\r\n        const items = res.data\r\n        if (res.data.length > 0) {\r\n          setQtyMoveList(qtyMoveList =>\r\n            [...qtyMoveList, { id: items[0].id, lot: items[0].lot, loc: items[0].loc, item: items[0].item, qty1: items[0].qty1, u_m: items[0].u_m, }])\r\n        } else {\r\n          alert(\"ไม่พบ Tags\")\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (!toLocation) {\r\n      alert(\"กรุณากรอก location ปลายทาง\")\r\n      setOpenModal(false);\r\n    } else {\r\n      setOpenModal(true);\r\n      //Insert QTY MOVE HEARDER\r\n      Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=moveqty_create_hdr&toLoc=${toLocation}`)\r\n        .then(res => {\r\n          const moveqty_hdr = res.data\r\n          setdocNum(moveqty_hdr.doc_num)\r\n          setToLocation(moveqty_hdr.loc)\r\n          if (qtyMoveList.length > 0) {\r\n            let i = 1;\r\n            console.log(qtyMoveList[i - 1])\r\n            //Insert QTY LINE \r\n            const timer = setInterval(() => {\r\n              Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=moveqty_create_line&docnum=${moveqty_hdr.doc_num}&docline=${i}&tagnum=${qtyMoveList[i - 1].id}&toLoc=${toLocation}`)\r\n                .then(res => {\r\n                 console.log(\"Call API moveqty_create_line\")\r\n                })\r\n              if (i === qtyMoveList.length) {\r\n                clearInterval(timer)\r\n                setQtyMoveList([])\r\n                //setOpen(false);\r\n              }\r\n              i = i + 1;\r\n            }, 1000);\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: \"80%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      margin: \"5%\"\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n        <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n          <Grid item xs={4} style={{ textAlign: \"center\" }}>  เลขเอกสาร:{docNum}</Grid>\r\n          <Grid item xs={4} style={{ textAlign: \"center\" }}>  Location ปลายทาง:{toLocation}</Grid>\r\n          <Grid item xs={4} style={{ textAlign: \"center\" }}>  ทำการย้าย Location {qtyMoveList.length} รายการ</Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n            <LinearProgressWithLabel\r\n              listLength={qtyMoveList.length}\r\n              handleProcessSuccess={handleProcessSuccess}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n            {/* <CPrintDocument /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Container >\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ padding: 5, }}>\r\n      <div>\r\n        <Modal open={openModal} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\" >\r\n          {body}\r\n        </Modal>\r\n      </div>\r\n      <Grid container spacing={3} style={{ textAlign: \"center\" }}>\r\n        <CGroupTextBoxs\r\n          handleScanTag={handleScanTag}\r\n          handleToLocation={handleToLocation}\r\n          DocNum={props.DocNum}\r\n          STS_qty_move_hdr_loc={props.STS_qty_move_hdr_loc}\r\n          STS_qty_move_hdr_date={props.STS_qty_move_hdr_date}\r\n          PageState={props.PageState}\r\n        />\r\n        <CMatTable qtyMoveList={(props.PageState) ? qtyMoveList : props.STS_qty_move_line} />\r\n        <div style={{ width: \"100%\" }}>\r\n          {(props.PageState) ?\r\n            <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />} style={{ margin: 10 }} onClick={handleSubmit} >Save  </Button> :\r\n            <CPrintDocument />\r\n          }\r\n          <Button variant=\"contained\" color=\"default\" startIcon={<DeleteIcon />} style={{ margin: 10 }} > Clear </Button>\r\n        </div>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CCreate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Axios from 'axios';\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from './tableIcons'\r\n\r\nexport default function DenseTable(props) {\r\n\r\n    const handleClickSelectDoc = (row) => {\r\n        props.handleDocNum(row.doc_num)\r\n        props.handleSTS_qty_move_hdr_loc(row.loc)\r\n        props.handleSTS_qty_move_hdr_date(row.create_date.date)\r\n        Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=STS_qty_move_line&doc_num=${row.doc_num}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                props.handleSTS_qty_move_line(res.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Paper>\r\n            <MaterialTable\r\n                style={{ width: '100%', margin: 5, overflowX: \"scroll\" }}\r\n                icons={tableIcons}\r\n                title={\"Document List\"}\r\n                columns={[\r\n                    { title: 'Doc num', field: 'doc_num' },\r\n                    { title: 'date', field: 'create_date.date', type: 'date' },\r\n                    { title: 'To location', field: 'loc' },\r\n                ]}\r\n                onRowClick={(event, rowData) => { handleClickSelectDoc(rowData) }}\r\n                data={props.STS_qty_move_hrd}\r\n                options={{\r\n                    search: false,\r\n                    paging: false,\r\n                    maxBodyHeight: '70vh',\r\n                    minBodyHeight: '70vh',\r\n                }}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Switch } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport CCreate from './view/QuantityMove/CCreate';\nimport DocumentHearderList from './view/QuantityMove/DocumentHearderList';\nimport Axios from 'axios';\n\nfunction App() {\n  const [PageState, setPageState] = useState(false)\n  const toggleChecked = () => setPageState((prev) => !prev) //State Page Create or View Document\n  const [DocNum, setDocNum] = useState(\"\")\n  const [STS_qty_move_hdr_loc, setSTS_qty_move_hdr_loc] = useState(\"\")\n  const [STS_qty_move_hdr_date, setSTS_qty_move_hdr_date] = useState(\"\")\n  const [STS_qty_move_line, setSTS_qty_move_line] = useState([])\n  const [STS_qty_move_hrd, setSTS_qty_move_hrd] = useState([])\n\n  const handleDocNum = (DocNum) => setDocNum(DocNum) // Set Document Number\n  const handleSTS_qty_move_hdr_loc = (loc) => setSTS_qty_move_hdr_loc(loc) //Set Location\n  const handleSTS_qty_move_hdr_date = (date) => { setSTS_qty_move_hdr_date(date) } //Set Location\n  const handleSTS_qty_move_line = (STS_qty_move_line) => setSTS_qty_move_line(STS_qty_move_line) //\n\n  const handleSetPageState = (pageState) => {\n    setPageState(pageState)\n  }\n  useEffect(() => {\n    console.log(1)\n    //http://localhost:88/sts_web_center_new/module/API_QuantityMove/data.php?load=STS_qty_move_hrd\n    Axios.get(`http://172.18.1.194/sts_web_center/module/API_QuantityMove/data.php?load=STS_qty_move_hrd`)\n      .then(res => {\n        setSTS_qty_move_hrd(res.data)\n      })\n  }, [PageState])\n  return (\n    <Container maxWidth=\"lg\" style={{ padding: 5 }}>\n      <Grid container spacing={3}>\n        <Grid item xs={(PageState) ? 2 : 5} hidden={(PageState) ? true : false} style={{ textAlign: \"center\" }}>\n          <DocumentHearderList\n            STS_qty_move_hrd={STS_qty_move_hrd}\n            handleDocNum={handleDocNum}\n            handleSTS_qty_move_hdr_loc={handleSTS_qty_move_hdr_loc}\n            handleSTS_qty_move_hdr_date={handleSTS_qty_move_hdr_date}\n            handleSTS_qty_move_line={handleSTS_qty_move_line}\n          />\n        </Grid>\n        <Grid item xs={(PageState) ? 12 : 7}>\n          {<Switch checked={PageState} onChange={toggleChecked} />}\n          {(PageState) ? \"Create 1901302030137\" : \"View\"}\n          <CCreate\n            PageState={PageState}\n            DocNum={DocNum}\n            STS_qty_move_hdr_loc={STS_qty_move_hdr_loc}\n            STS_qty_move_hdr_date={STS_qty_move_hdr_date}\n            STS_qty_move_line={STS_qty_move_line}\n            setPageState={handleSetPageState}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst islocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (islocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}